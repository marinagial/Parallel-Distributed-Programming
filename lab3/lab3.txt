2. Παραλληλισμός δεδομένων και λειτουργιών
 Μελετήστε και εκτελέστε τους κώδικες SimpleParallel/RGBtoGrayScle.java, SetPixels.java,  
SimpleSat.java.


 2.1. Προτείνετε λύσεις για τον παραλληλισμό τους. Ποιο τμήμα του κώδικα θα παραλληλιστεί και γιατί
 αυτό είναι εφικτό (ποια είναι τα κριτήρια παραλληλισμού parallel_for δηλαδή);

Στην κλάση SetPixel μπορεί να παραλληλιστεί ο εξωτερικός βρόχος της for (γραμμή 31) όπου παίρνουμε κάθε γραμμή της εικόνας ουσιαστικά . Η μία γραμμή είναι ανεξάρτητη από την άλλη οπότε θα μπορούσε η εσωτερική for να τρέχει παράλληλα για κάθε γράμμη της εικόνας και να δημιουργεί τα Color objects δίχως πρόβλημα . 

Στην κλάση RGBtoGrayScale με παρόμοιο σκεπτικό ξανά θα μπορούσαμε να εφαρμόσουμε παραλληλισμό στην εξωτερική for loop στη γραμμή 39 που όπως και στην SetPixel αφορά κάθε γραμμή Pixel της εικόνας και σε κάθε στήλη της γραμμής δημιουργεί Color object . Ο κώδικας θα μπορούσε να τρέχει παράλληλα για κάθε γραμμή αφού είναι η μία ανεξάρτητη από την άλλη για την επεξεργασία που γίνεται εντός της for . 

Στην κλάση SimpleSat ο έλεγχος του κυκλώματος στη γραμμή 17 που επαναλαμβάνεται 2^size φορές μπορεί να παραλληλιστεί καθώς κάθε έλεγχος που πραγματοποιείται είναι ανεξάρτητος ο ένας από τον άλλον . 



 2.2. Γράψτε ένα ψευδοκώδικα (σε αρχείο txt) που να δείχνει τα τρία βασικά βήματα του απλού 
παραλληλισμού με στατική κατανομή που εφαρμόζετε στο parallel_for.


main{
	int Ν  //size of the problem 
	int P //αριθμός από εργασίες στις οποιες θα χωριστεί το πρόβλημα ,συνήθως όσες και οι διαθεσιμοι επεξεργαστές 

	block = N/P;
	start = 0;
	stop = 0;
	
	for(i=0; i<P; i++){

		start = i*block;
		stop = start * block;
		if(i==P-1) stop = N;
		
		Thread[i] = myThread(...,start,stop);
		
		start Thread[i];
	}
	
	for(i=0; i<P; i++){
		join Thread[i];
	}
	
}


class myThread(...,start,stop){

	... constructor ...
	
	for(i=start; i<stop; i++){
		..code...
	}
	
}


 2.3. Θεωρητικά ένα πρόγραμμα που τρέχει ακολουθιακά σε Ν χρόνο , αν εκτελεστεί παράλληλα ο χρόνος εκτέλεσης θα μειωθεί σε Ν/P με P τον αριθμό των διαθεσιμων επεξεργαστών .

2.5
SimpleSat :πριν 8217 ms , μετά 2137

Παρατηρούμε ο χρόνος να έχει μειωθεί κατά περίπου 1/4 . 

Τα RGBToGrayScale και SetPixels δεν μπόρεσα να τα τρέξω, η τιμή του img έμενε null παρόλο που η εικόνα ήταν μέσα στο φακέλο και προσπάθησα και με τους δύο τρόπους που έχετε είτε command line είτε απευθείας ανάθεση και σε Eclipse και σε VS code. 

Exception in thread "main" java.lang.NullPointerException: Cannot invoke "java.awt.image.BufferedImage.getHeight()" because "img" is null
	at erg3paral.RGBtoGrayScale.main(RGBtoGrayScale.java:40) . Η εικόνα βρισκότανε μέσα στο src δεν ξέρω ποιο ήταν το πρόβλημα . 